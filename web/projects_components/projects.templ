package projects_components

import (
	"configuration-management/internal/models"
	"configuration-management/web"
	"fmt"
	"strings"
)

templ Projects(projects []models.Project) {
	@web.Base() {
		@CreateProject()
		@ListProjects(projects)
	}
}

templ ListProjects(projects []models.Project) {
	<div id="projects-list">
		for id, project := range projects {
			@ProjectDetails(project, id == 0)
		}
	</div>
}

templ ProjectDetails(project models.Project, open bool) {
	<details open?={ open } class="collapse collapse-arrow bg-base-300 mb-3">
		<summary class="collapse-title text-xl font-medium">{ project.Name }</summary>
		<div class="collapse-content">
			<div role="tablist" class="tabs tabs-bordered">
				<input
					type="radio"
					name={ "my_tabs_" + project.ID.String() }
					role="tab"
					class="tab"
					aria-label="Details"
					checked="checked"
				/>
				<div role="tabpanel" class="tab-content p-6 pb-2">
					<div class="flex flex-col">
						Secret key & Create new configurations
						<div class="flex flex-row mt-3">
							@CreateConfiguration(project)
							<button
								class="btn btn-error flex-1 ml-2"
								hx-target="closest details"
								hx-swap="outerHTML"
								hx-delete={ "/projects/" + project.ID.String() }
							>
								Delete project
							</button>
						</div>
					</div>
				</div>
				for _, config := range project.Configs {
					<input
						type="radio"
						name={ "my_tabs_" + project.ID.String() }
						role="tab"
						class="tab"
						aria-label={ config.Name }
					/>
					<div role="tabpanel" class="tab-content p-10">
						<p>{ config.ID }</p>
						<p>{ config.HeaderName }</p>
						<p>{ config.HeaderValue }</p>
					</div>
				}
			</div>
		</div>
	</details>
}

templ CreateProject() {
	<div class="card bg-base-300 rounded-box p-4 mb-3">
		<form
			hx-post="/projects"
			hx-target="#projects-list"
			hx-swap="afterbegin"
			hx-on::after-request="if(event.detail.successful) this.reset()"
		>
			<span>Create a new project</span>
			<input type="text" name="project-name" placeholder="Project name" class="mt-3 mb-3 input input-bordered w-full"/>
			<button class="btn btn-primary w-full" type="submit">Create</button>
		</form>
	</div>
}

templ CreateConfiguration(project models.Project) {
	<dialog id={ "create_config_modal_" + strings.Replace(project.ID.String(), "-", "", -1) } class="modal">
		<div class="modal-box">
			<form method="dialog">
				<button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">âœ•</button>
			</form>
			<h3 class="text-lg font-bold">Create a new configuration</h3>
			<form method="post" action="/" hx-post={ "/projects/" + project.ID.String() }>
				<input type="text" name="name" placeholder="Configuration name" class="input input-bordered mt-3 w-full"/>
				<input type="text" name="host" placeholder="Host" class="input input-bordered mt-3 w-full"/>
				<input type="text" name="header-name" placeholder="Header name" class="input input-bordered mt-3 w-full"/>
				<input type="text" name="header-value" placeholder="Header value" class="input input-bordered mt-3 mb-3 w-full"/>
				<button type="submit" class="btn btn-primary w-full">Create</button>
			</form>
		</div>
	</dialog>
	<button
		class="btn btn-primary flex-1 mr-2"
		{ templ.Attributes{"hx-on:click": fmt.Sprintf("create_config_modal_%s.showModal()", strings.Replace(project.ID.String(), "-", "", -1))}... }
	>
		Create configuration
	</button>
}
